#!/bin/sh
# the vcc helper script

VCCIMAGE="hpchud/vcc-torque:latest"
SCRIPTVERSION="master"
SCRIPTURL="https://raw.githubusercontent.com/hpchud/vccjs/$SCRIPTVERSION/vcc"

if test "$1" = 'update'; then
	echo "Updating VCC tool..."
	echo ""
	wget -O /usr/bin/vcc-new $SCRIPTURL 2>&1 >/dev/null
	if test "$?" = '0'; then
		mv /usr/bin/vcc-new /usr/bin/vcc
		chmod a+x /usr/bin/vcc
		echo "The VCC tool has been updated."
	else
			echo 'There was a problem updating the script. Check proxy settings.'
			exit 1
	fi
	echo "Pulling Docker images"
	echo ""
	docker pull $VCCIMAGE
	if test "$?" = '0'; then
		echo "Images downloaded/updated successfully."
	else
		echo 'There was a problem downloading the images. Check proxy settings.'
		exit 1
	fi
	exit 0
elif test "$1" = 'shell'; then
	nids="`docker ps | grep $VCCIMAGE | awk '{print $1}' | wc -l`"
	if test "$nids" = '1'; then
		id="`docker ps | grep $VCCIMAGE | awk '{print $1}'`"
		echo ""
		echo ""
		echo "*********"
		echo "You are now entering the VCC shell for $id"
		echo "To exit, type \`exit\` or press CTRL+D"
		echo "*********"
		echo ""
		echo ""
		docker exec -it $id /bin/bash
	elif test "$nids" = '0'; then
		echo "There are no containers running."
		echo "Maybe you need to run \`docker start <id>\`?"
		echo ""
		echo "(to set up the lab testing environment, run \`vcc setuplab\`)"
	else
		echo "Please choose which container to enter:"
		echo "(CTRL+C to cancel)"
		echo ""
		docker inspect --format='{{.Name}} {{.Id}}' $(docker ps -q --no-trunc) | tr '/' ' '
		echo ""
		echo -n "Name or Id : "
		read id
		echo ""
		echo ""
		echo "*********"
		echo "You are now entering the VCC shell for $id"
		echo "To exit, type \`exit\` or press CTRL+D"
		echo "*********"
		echo ""
		echo ""
		docker exec -it $id /bin/bash
	fi
	exit 0
elif test "$1" = 'krm'; then
	docker kill $2
	docker rm $2
elif test "$1" = 'setuplab'; then
	docker run -d --name=discovery hpchud/vcc-discovery
	docker run -d --link discovery:discovery \
		--name=headnode \
		-v /cluster:/cluster \
		-p 2222:2222 \
		$VCCIMAGE \
		--cluster=testlab \
		--storage-host=discovery \
		--storage-port=2379 \
		--service=headnode
	docker run -d --link discovery:discovery \
		--name=workernode \
		-v /cluster:/cluster \
		$VCCIMAGE \
		--cluster=testlab \
		--storage-host=discovery \
		--storage-port=2379 \
		--service=workernode
	docker start headnode
	docker start workernode
else
	docker run -d $DOCKER_ARGS $VCCIMAGE $@
fi

